文件：main.c       编译器版本 HGASM 0202 页次1


   1  0000              ; Generated by holtek-gcc v3.19, Fri Jan 21 10:16:58 2022
   2  0000              ; 
   3  0000              ; Configuration:
   4  0000              ;       without long instruction
   5  0000              ;       Single ROM, Multi-RAM
   6  0000              ;       bits_per_rom_unit:16
   7  0000              ;       with mp1
   8  0000              ;       with tbhp, address(0x9)
   9  0000              ;          Use tabrd-const
  10  0000              ;       
  11  0000              ;       
  12  0000              ;       
  13  0000              ; use 'tabrdc' instead of 'tabrd'
  14  0000              ;       
  15  0000              
  16  0000              #pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
  17  0000              ; Rebuild 718
  18  0000              
  19  0000              ir equ [2]
  20  0000              mp equ [3]
  21  0000              sbp equ [1]
  22  0000              acc equ [5]
  23  0000              bp equ [4]
  24  0000              tblp equ [7]
  25  0000              tbhp equ [9]
  26  0000              status equ [10]
  27  0000              c equ [10].0
  28  0000              ac equ [10].1
  29  0000              z equ [10].2
  30  0000              ov equ [10].3
  31  0000              intc equ [11]
  32  0000              
  33  0000              extern ra:byte
  34  0000              extern rb:byte
  35  0000              extern rc:byte
  36  0000              extern rd:byte
  37  0000              extern re:byte
  38  0000              extern rf:byte
  39  0000              extern rg:byte
  40  0000              extern rh:byte
  41  0000              extern _Crom2Prom:near
  42  0000              extern _Crom2PromNext:near
  43  0000              
  44  0000              RAMBANK 0 @HCCINIT, @HCCINIT0
  45  0000              
  46  0000              RAMBANK 0 @BITDATASEC, @BITDATASEC1
  47  0000              @HCCINIT	.section 'data'
  48  0000              @HCCINIT0	.section 'data'
  49  0000              @BITDATASEC	 .section 'data'
  50  0000              @BITDATASEC1	 .section 'data'
  51  0000              
  52  0000              #pragma debug scope 1 1
  53  0000              	extern __DELAY3:near
  54  0000              	extern __DELAYX3:near
  55  0000              	extern __DELAYX6:near
  56  0000              	extern __DELAYY5:near
  57  0000              	extern __DELAYY3:near
  58  0000              	extern _builtin_holtek_delay_2:byte
  59  0000              public _Delay_ms
文件：main.ASM     编译器版本 HGASM 0202 页次2

  60  0000              #pragma debug scope 2 1

  35  0000              #line 35 "E:\HT66F018_F12\uart\main.c"
  35  0000              _Delay_ms .section 'code'
  35  0000              _Delay_ms proc
  35  0000              public _Delay_ms_2
  35  0000  0002[           local _Delay_ms_2 db 2 dup(?)	; 2,0
            00
            ]
  35  0002              #pragma debug variable 12 2 _Delay_ms_2+0 "ms"
  36  0002              #line 36 "E:\HT66F018_F12\uart\main.c"
  36  0000  2800     R  	jmp _L2
  36  0001              _L3:
  38  0001              #line 38 "E:\HT66F018_F12\uart\main.c"
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000>263690
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	ERRMESSAGE 'the value 2000of the argument exceeds the maxinum 263690'
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000<0
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	ERRMESSAGE 'the value 2000 of the argument exceeds the mininum 0'
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000==0
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	JMP $
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000==1
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000==2
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF 2000==3
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	NOP
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF (2000<8) AND (2000>3)
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	CALL __DELAY3 + 7 -2000
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF (2000< 0404h) AND (2000>7)
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	MOV A,2000/4-1
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
文件：main.c       编译器版本 HGASM 0202 页次3

  38  0001              	CALL __DELAYX3 + 3 -(2000 MOD 4)
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF (2000< 0x40B) AND (2000> 0403h)
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	MOV A,0 
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	CALL __DELAYX6 + 0x40a -2000
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)>256)
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	MOV A,(2000-9)/0402h
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	MOV _builtin_holtek_delay_2,A
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	MOV A,0
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	CALL __DELAYY5 +5- (((2000-9)%0402h)%6)
  38  0001              	ENDIF
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001              	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)<=256)
  38  0001              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0001  0F01        	MOV A,(2000-9)/0402h
  38  0002              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0002  0080     E  	MOV _builtin_holtek_delay_2,A
  38  0003              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0003  0FF2        	MOV A,((2000-9)%0402h)/4+1
  38  0004              ;# 38 "E:\HT66F018_F12\uart\main.c" 1
  38  0004  2000     E  	CALL __DELAYY3 +3-(((2000-9)%0402h)%4)
  38  0005              	ENDIF
  38  0005              _L2:
  36  0005              #line 36 "E:\HT66F018_F12\uart\main.c"
  36  0005  0FFF        	mov a,255
  36  0006  0380     R  	addm a,_Delay_ms_2[0]
  36  0007  0FFF        	mov a,255
  36  0008  1380     R  	adcm a,_Delay_ms_2[1]
  36  0009  0700     R  	mov a,_Delay_ms_2[0]
  36  000A  0600     R  	and a,_Delay_ms_2[1]
  36  000B  0B01        	add a,1
  36  000C  380A        	snz c
  36  000D  2800     R  	jmp _L3
  36  000E  0003        	ret
  36  000F              _Delay_ms endp
  36  000F              #line 36 "E:\HT66F018_F12\uart\main.c"
  36  000F              #pragma debug scope 1 1
  36  000F              ___pac equ [21]
  36  000F              ___papu equ [22]
  36  000F              ___pa equ [20]
  36  000F              public _GPIOA_INIT
  36  000F              #pragma debug scope 3 1
  45  000F              #line 45 "E:\HT66F018_F12\uart\main.c"
  45  0000              _GPIOA_INIT .section 'code'
  45  0000              _GPIOA_INIT proc
  45  0000              public _GPIOA_INIT_2
  45  0000  0004[           local _GPIOA_INIT_2 db 4 dup(?)	; 3,1
            00
            ]
  45  0000  0080     R  	mov _GPIOA_INIT_2[3],a
  45  0001              #pragma debug variable 8 3 _GPIOA_INIT_2+3 "GPIO_Pin"
文件：main.c       编译器版本 HGASM 0202 页次4

  45  0001              #pragma debug variable 8 3 _GPIOA_INIT_2+0 "GPIO_Mode"
  45  0001              #pragma debug variable 8 3 _GPIOA_INIT_2+1 "wakeup"
  45  0001              #pragma debug variable 8 3 _GPIOA_INIT_2+2 "GPIO_BitVal"
  46  0001              #line 46 "E:\HT66F018_F12\uart\main.c"
  46  0001  1700     R  	sdza _GPIOA_INIT_2[0]
  46  0002  2800     R  	jmp _L6
  48  0003              #line 48 "E:\HT66F018_F12\uart\main.c"
  48  0003  0700     R  	mov a,_GPIOA_INIT_2[3]
  48  0004  0595        	orm a,[21]
  49  0005              #line 49 "E:\HT66F018_F12\uart\main.c"
  49  0005  0700     R  	mov a,_GPIOA_INIT_2[3]
  49  0006  0596        	orm a,[22]
  49  0007  2800     R  	jmp _L7
  49  0008              _L6:
  53  0008              #line 53 "E:\HT66F018_F12\uart\main.c"
  53  0008  0100     R  	cpla _GPIOA_INIT_2[3]
  53  0009  0080     E  	mov ra,a
  53  000A  0700     E  	mov a,ra
  53  000B  0695        	andm a,[21]
  54  000C              #line 54 "E:\HT66F018_F12\uart\main.c"
  54  000C  0700     E  	mov a,ra
  54  000D  0696        	andm a,[22]
  54  000E              _L7:
  57  000E              #line 57 "E:\HT66F018_F12\uart\main.c"
  57  000E  1080     R  	sz _GPIOA_INIT_2[2]
  57  000F  2800     R  	jmp _LI1
  57  0010  2800     R  	jmp _L8
  57  0011              _LI1:
  59  0011              #line 59 "E:\HT66F018_F12\uart\main.c"
  59  0011  0700     R  	mov a,_GPIOA_INIT_2[3]
  59  0012  0594        	orm a,[20]
  59  0013  2800     R  	jmp _L5
  59  0014              _L8:
  63  0014              #line 63 "E:\HT66F018_F12\uart\main.c"
  63  0014  0100     R  	cpla _GPIOA_INIT_2[3]
  63  0015  0080     E  	mov ra,a
  63  0016  0700     E  	mov a,ra
  63  0017  0694        	andm a,[20]
  63  0018              _L5:
  63  0018  0003        	ret
  63  0019              _GPIOA_INIT endp
  63  0019              #line 63 "E:\HT66F018_F12\uart\main.c"
  63  0019              #pragma debug scope 1 1
  63  0019              ___pbc equ [38]
  63  0019              ___pbpu equ [39]
  63  0019              ___pb equ [37]
  63  0019              public _GPIOB_INIT
  63  0019              #pragma debug scope 4 1
  69  0019              #line 69 "E:\HT66F018_F12\uart\main.c"
  69  0000              _GPIOB_INIT .section 'code'
  69  0000              _GPIOB_INIT proc
  69  0000              public _GPIOB_INIT_2
  69  0000  0003[           local _GPIOB_INIT_2 db 3 dup(?)	; 2,1
            00
            ]
  69  0000  0080     R  	mov _GPIOB_INIT_2[2],a
  69  0001              #pragma debug variable 8 4 _GPIOB_INIT_2+2 "GPIO_Pin"
  69  0001              #pragma debug variable 8 4 _GPIOB_INIT_2+0 "GPIO_Mode"
  69  0001              #pragma debug variable 8 4 _GPIOB_INIT_2+1 "GPIO_BitVal"
  71  0001              #line 71 "E:\HT66F018_F12\uart\main.c"
文件：main.c       编译器版本 HGASM 0202 页次5

  71  0001  1700     R  	sdza _GPIOB_INIT_2[0]
  71  0002  2800     R  	jmp _L11
  73  0003              #line 73 "E:\HT66F018_F12\uart\main.c"
  73  0003  0700     R  	mov a,_GPIOB_INIT_2[2]
  73  0004  05A6        	orm a,[38]
  74  0005              #line 74 "E:\HT66F018_F12\uart\main.c"
  74  0005  0700     R  	mov a,_GPIOB_INIT_2[2]
  74  0006  05A7        	orm a,[39]
  74  0007  2800     R  	jmp _L12
  74  0008              _L11:
  78  0008              #line 78 "E:\HT66F018_F12\uart\main.c"
  78  0008  0100     R  	cpla _GPIOB_INIT_2[2]
  78  0009  0080     E  	mov ra,a
  78  000A  0700     E  	mov a,ra
  78  000B  06A6        	andm a,[38]
  79  000C              #line 79 "E:\HT66F018_F12\uart\main.c"
  79  000C  0700     E  	mov a,ra
  79  000D  06A7        	andm a,[39]
  79  000E              _L12:
  82  000E              #line 82 "E:\HT66F018_F12\uart\main.c"
  82  000E  1080     R  	sz _GPIOB_INIT_2[1]
  82  000F  2800     R  	jmp _LI2
  82  0010  2800     R  	jmp _L13
  82  0011              _LI2:
  84  0011              #line 84 "E:\HT66F018_F12\uart\main.c"
  84  0011  0700     R  	mov a,_GPIOB_INIT_2[2]
  84  0012  05A5        	orm a,[37]
  84  0013  2800     R  	jmp _L10
  84  0014              _L13:
  88  0014              #line 88 "E:\HT66F018_F12\uart\main.c"
  88  0014  0100     R  	cpla _GPIOB_INIT_2[2]
  88  0015  0080     E  	mov ra,a
  88  0016  0700     E  	mov a,ra
  88  0017  06A5        	andm a,[37]
  88  0018              _L10:
  88  0018  0003        	ret
  88  0019              _GPIOB_INIT endp
  88  0019              #line 88 "E:\HT66F018_F12\uart\main.c"
  88  0019              #pragma debug scope 1 1
  88  0019              ___pcc equ [65]
  88  0019              ___pcpu equ [66]
  88  0019              ___pc equ [64]
  88  0019              public _GPIOC_INIT
  88  0019              #pragma debug scope 5 1
  93  0019              #line 93 "E:\HT66F018_F12\uart\main.c"
  93  0000              _GPIOC_INIT .section 'code'
  93  0000              _GPIOC_INIT proc
  93  0000              public _GPIOC_INIT_2
  93  0000  0003[           local _GPIOC_INIT_2 db 3 dup(?)	; 2,1
            00
            ]
  93  0000  0080     R  	mov _GPIOC_INIT_2[2],a
  93  0001              #pragma debug variable 8 5 _GPIOC_INIT_2+2 "GPIO_Pin"
  93  0001              #pragma debug variable 8 5 _GPIOC_INIT_2+0 "GPIO_Mode"
  93  0001              #pragma debug variable 8 5 _GPIOC_INIT_2+1 "GPIO_BitVal"
  95  0001              #line 95 "E:\HT66F018_F12\uart\main.c"
  95  0001  1700     R  	sdza _GPIOC_INIT_2[0]
  95  0002  2800     R  	jmp _L16
  97  0003              #line 97 "E:\HT66F018_F12\uart\main.c"
  97  0003  0700     R  	mov a,_GPIOC_INIT_2[2]
文件：main.c       编译器版本 HGASM 0202 页次6

  97  0004  05C1        	orm a,[65]
  98  0005              #line 98 "E:\HT66F018_F12\uart\main.c"
  98  0005  0700     R  	mov a,_GPIOC_INIT_2[2]
  98  0006  05C2        	orm a,[66]
  98  0007  2800     R  	jmp _L17
  98  0008              _L16:
 102  0008              #line 102 "E:\HT66F018_F12\uart\main.c"
 102  0008  0100     R  	cpla _GPIOC_INIT_2[2]
 102  0009  0080     E  	mov ra,a
 102  000A  0700     E  	mov a,ra
 102  000B  06C1        	andm a,[65]
 103  000C              #line 103 "E:\HT66F018_F12\uart\main.c"
 103  000C  0700     E  	mov a,ra
 103  000D  06C2        	andm a,[66]
 103  000E              _L17:
 106  000E              #line 106 "E:\HT66F018_F12\uart\main.c"
 106  000E  1080     R  	sz _GPIOC_INIT_2[1]
 106  000F  2800     R  	jmp _LI3
 106  0010  2800     R  	jmp _L18
 106  0011              _LI3:
 108  0011              #line 108 "E:\HT66F018_F12\uart\main.c"
 108  0011  0700     R  	mov a,_GPIOC_INIT_2[2]
 108  0012  05C0        	orm a,[64]
 108  0013  2800     R  	jmp _L15
 108  0014              _L18:
 112  0014              #line 112 "E:\HT66F018_F12\uart\main.c"
 112  0014  0100     R  	cpla _GPIOC_INIT_2[2]
 112  0015  0080     E  	mov ra,a
 112  0016  0700     E  	mov a,ra
 112  0017  06C0        	andm a,[64]
 112  0018              _L15:
 112  0018  0003        	ret
 112  0019              _GPIOC_INIT endp
 112  0019              #line 112 "E:\HT66F018_F12\uart\main.c"
 112  0019              #pragma debug scope 1 1
 112  0019              ___bp equ [4]
 112  0019              ___mp1 equ [3]
 112  0019              ___iar1 equ [2]
 112  0019              public _clr_ram_en
 112  0019              #pragma debug scope 6 1
 119  0019              #line 119 "E:\HT66F018_F12\uart\main.c"
 119  0000              _clr_ram_en .section 'code'
 119  0000              _clr_ram_en proc
 119  0000  00              local _clr_ram_en_2 db 1 dup(?)	; 0,1
 119  0000  0080     E  	mov ra,a
 119  0001  0080     R  	mov _clr_ram_en_2[0],a
 119  0002              #pragma debug variable 8 6 _clr_ram_en_2+0 "t"
 120  0002              #line 120 "E:\HT66F018_F12\uart\main.c"
 120  0002  0F01        	mov a,1
 120  0003  0680     E  	andm a,ra
 120  0004  3404        	clr [4].0
 120  0005  0700     E  	mov a,ra
 120  0006  0584        	orm a,[4]
 121  0007              #line 121 "E:\HT66F018_F12\uart\main.c"
 121  0007  0F80        	mov a,128
 121  0008  0083        	mov [3],a
 122  0009              #line 122 "E:\HT66F018_F12\uart\main.c"
 122  0009  2800     R  	jmp _L21
 122  000A              _L22:
 124  000A              #line 124 "E:\HT66F018_F12\uart\main.c"
文件：main.c       编译器版本 HGASM 0202 页次7

 124  000A  1F02        	clr [2]
 125  000B              #line 125 "E:\HT66F018_F12\uart\main.c"
 125  000B  1483        	inc [3]
 125  000C              _L21:
 122  000C              #line 122 "E:\HT66F018_F12\uart\main.c"
 122  000C  1083        	sz [3]
 122  000D  2800     R  	jmp _L22
 122  000E  0003        	ret
 122  000F              _clr_ram_en endp
 122  000F              #line 122 "E:\HT66F018_F12\uart\main.c"
 122  000F              #pragma debug scope 1 1
 122  000F              ___smod equ [11]
 122  000F              ___wdtc equ [26]
 122  000F              ___acerl equ [36]
 122  000F              ___tmpc equ [25]
 122  000F              ___cpc equ [62]
 122  000F              ___integ equ [13]
 122  000F              ___intc0 equ [14]
 122  000F              ___tm0c0 equ [47]
 122  000F              ___tm0c1 equ [48]
 122  000F              ___tm0al equ [51]
 122  000F              ___tm0ah equ [52]
 122  000F              ___mfi0 equ [17]
 122  000F              public _Init_clock
 122  000F              #pragma debug scope 7 1
 130  000F              #line 130 "E:\HT66F018_F12\uart\main.c"
 130  0000              _Init_clock .section 'code'
 130  0000              _Init_clock proc
 131  0000              #line 131 "E:\HT66F018_F12\uart\main.c"
 131  0000  0F01        	mov a,1
 131  0001  008B        	mov [11],a
 131  0002              _L25:
 132  0002              #line 132 "E:\HT66F018_F12\uart\main.c"
 132  0002  390B        	snz [11].2
 132  0003  2800     R  	jmp _L25
 133  0004              #line 133 "E:\HT66F018_F12\uart\main.c"
 133  0004  0F57        	mov a,87
 133  0005  009A        	mov [26],a
 134  0006              #line 134 "E:\HT66F018_F12\uart\main.c"
 134  0006  1F24        	clr [36]
 135  0007              #line 135 "E:\HT66F018_F12\uart\main.c"
 135  0007  1F19        	clr [25]
 136  0008              #line 136 "E:\HT66F018_F12\uart\main.c"
 136  0008  0F08        	mov a,8
 136  0009  00BE        	mov [62],a
 137  000A              #line 137 "E:\HT66F018_F12\uart\main.c"
 137  000A  1F0D        	clr [13]
 138  000B              #line 138 "E:\HT66F018_F12\uart\main.c"
 138  000B  348E        	clr [14].1
 139  000C              #line 139 "E:\HT66F018_F12\uart\main.c"
 139  000C  340E        	clr [14].0
 142  000D              #line 142 "E:\HT66F018_F12\uart\main.c"
 142  000D  0F10        	mov a,16
 142  000E  00AF        	mov [47],a
 143  000F              #line 143 "E:\HT66F018_F12\uart\main.c"
 143  000F  0FC1        	mov a,193
 143  0010  00B0        	mov [48],a
 144  0011              #line 144 "E:\HT66F018_F12\uart\main.c"
 144  0011  1F33        	clr [51]
 145  0012              #line 145 "E:\HT66F018_F12\uart\main.c"
文件：main.c       编译器版本 HGASM 0202 页次8

 145  0012  0F03        	mov a,3
 145  0013  00B4        	mov [52],a
 146  0014              #line 146 "E:\HT66F018_F12\uart\main.c"
 146  0014  3691        	clr [17].5
 147  0015              #line 147 "E:\HT66F018_F12\uart\main.c"
 147  0015  31AF        	set [47].3
 148  0016              #line 148 "E:\HT66F018_F12\uart\main.c"
 148  0016  318E        	set [14].3
 149  0017              #line 149 "E:\HT66F018_F12\uart\main.c"
 149  0017  3091        	set [17].1
 155  0018              #line 155 "E:\HT66F018_F12\uart\main.c"
 155  0018  300E        	set [14].0
 157  0019              #line 157 "E:\HT66F018_F12\uart\main.c"
 157  0019              ;# 157 "E:\HT66F018_F12\uart\main.c" 1
 157  0019  0001        	clr wdt
 158  001A              #line 158 "E:\HT66F018_F12\uart\main.c"
 158  001A  0F00        	mov a,0
 158  001B  2000     R  	call _clr_ram_en
 159  001C              #line 159 "E:\HT66F018_F12\uart\main.c"
 159  001C  0F01        	mov a,1
 159  001D  2000     R  	call _clr_ram_en
 159  001E  0003        	ret
 159  001F              _Init_clock endp
 159  001F              #line 159 "E:\HT66F018_F12\uart\main.c"
 159  001F              #pragma debug scope 1 1
 159  001F              public _isr_TM0
 159  001F              #pragma debug scope 8 1
 166  001F              #line 166 "E:\HT66F018_F12\uart\main.c"
 166  0000              @isr_TM0_code .section at 12 'code'
 166  0000  0080     E  	mov r1,a
 166  0001  070A        	mov a,status
 166  0002  0080     E  	mov r2,a
 166  0003  2800     R  	jmp _isr_TM0
 166  0004              #pragma debug scope 1 1
 166  0004              @dummy12 endp
 166  0004              #pragma debug scope 9 1
 166  0000              _isr_TM0 .section 'code'
 166  0000              _isr_TM0 proc
 167  0000              #line 167 "E:\HT66F018_F12\uart\main.c"
 167  0000  3691        	clr [17].5
 171  0001              #line 171 "E:\HT66F018_F12\uart\main.c"
 171  0001  300E        	set [14].0
 171  0002  0700     E  	mov a,r2
 171  0003  008A        	mov status,a
 171  0004  0700     E  	mov a,r1
 171  0005  0004        	reti
 171  0006              _isr_TM0 endp
 171  0006              
 171  0006              #line 171 "E:\HT66F018_F12\uart\main.c"
 171  0006              #pragma debug scope 1 1
 171  0000              @crom	.section 'crom'
 171  0000              _LC0:
 171  0000              	db 068h,065h,06ch,06ch,06fh,02ch,077h,06fh,072h,06ch
 171  0005              	db 064h,021h,00h
 171  0007              public _main
 171  0007              #pragma debug scope 10 1
 186  0007              #line 186 "E:\HT66F018_F12\uart\main.c"
 186  0007              IFDEF WITH_DEFAULT_STARTUP
 186  0007              extern _main_initial0:near
 186  0007              extern _main_startup:near
文件：main.c       编译器版本 HGASM 0202 页次9

 186  0007              ENDIF
 186  0007              
 186  0007              ROMBANK 0 @start
 186  0000              @start .section com_l 'code'
 186  0000              _main_startup1:
 186  0000              @start .section com_e 'code'
 186  0000  2800     R  	jmp _main
 186  0001              
 186  0000              _main .section 'code'
 186  0000              _main proc
 187  0000              #line 187 "E:\HT66F018_F12\uart\main.c"
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100>263690
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	ERRMESSAGE 'the value 100of the argument exceeds the maxinum 263690'
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100<0
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	ERRMESSAGE 'the value 100 of the argument exceeds the mininum 0'
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100==0
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	JMP $
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100==1
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100==2
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF 100==3
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	NOP
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF (100<8) AND (100>3)
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	CALL __DELAY3 + 7 -100
 187  0000              	ENDIF
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000              	IF (100< 0404h) AND (100>7)
 187  0000              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0000  0F18        	MOV A,100/4-1
 187  0001              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0001  2000     E  	CALL __DELAYX3 + 3 -(100 MOD 4)
 187  0002              	ENDIF
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
文件：main.c       编译器版本 HGASM 0202 页次10

 187  0002              	IF (100< 0x40B) AND (100> 0403h)
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV A,0 
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	CALL __DELAYX6 + 0x40a -100
 187  0002              	ENDIF
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	IF (100 >= 0x40b) AND ((((100-9)%0402h)/4+1)>256)
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV A,(100-9)/0402h
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV _builtin_holtek_delay_2,A
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV A,0
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	CALL __DELAYY5 +5- (((100-9)%0402h)%6)
 187  0002              	ENDIF
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	IF (100 >= 0x40b) AND ((((100-9)%0402h)/4+1)<=256)
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV A,(100-9)/0402h
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV _builtin_holtek_delay_2,A
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	MOV A,((100-9)%0402h)/4+1
 187  0002              ;# 187 "E:\HT66F018_F12\uart\main.c" 1
 187  0002              	CALL __DELAYY3 +3-(((100-9)%0402h)%4)
 187  0002              	ENDIF
 188  0002              #line 188 "E:\HT66F018_F12\uart\main.c"
 188  0002  2000     R  	call _Init_clock
 190  0003              #line 190 "E:\HT66F018_F12\uart\main.c"
 190  0003  1F00     R  	clr _GPIOA_INIT_2[2]
 190  0004  1F00     R  	clr _GPIOA_INIT_2[1]
 190  0005  1F00     R  	clr _GPIOA_INIT_2[0]
 190  0006  0FFF        	mov a,255
 190  0007  2000     R  	call _GPIOA_INIT
 191  0008              #line 191 "E:\HT66F018_F12\uart\main.c"
 191  0008  1F00     R  	clr _GPIOB_INIT_2[1]
 191  0009  1F00     R  	clr _GPIOB_INIT_2[0]
 191  000A  0FFF        	mov a,255
 191  000B  2000     R  	call _GPIOB_INIT
 192  000C              #line 192 "E:\HT66F018_F12\uart\main.c"
 192  000C  1F00     R  	clr _GPIOC_INIT_2[1]
 192  000D  1F00     R  	clr _GPIOC_INIT_2[0]
 192  000E  0FFF        	mov a,255
 192  000F  2000     R  	call _GPIOC_INIT
 194  0010              #line 194 "E:\HT66F018_F12\uart\main.c"
 194  0010  3314        	set [20].6
 194  0011  3715        	clr [21].6
 194  0012  3316        	set [22].6
 195  0013              #line 195 "E:\HT66F018_F12\uart\main.c"
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000>263690
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	ERRMESSAGE 'the value 2000of the argument exceeds the maxinum 263690'
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000<0
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	ERRMESSAGE 'the value 2000 of the argument exceeds the mininum 0'
文件：main.c       编译器版本 HGASM 0202 页次11

 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000==0
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	JMP $
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000==1
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000==2
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF 2000==3
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	NOP
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF (2000<8) AND (2000>3)
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	CALL __DELAY3 + 7 -2000
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF (2000< 0404h) AND (2000>7)
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	MOV A,2000/4-1
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	CALL __DELAYX3 + 3 -(2000 MOD 4)
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF (2000< 0x40B) AND (2000> 0403h)
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	MOV A,0 
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	CALL __DELAYX6 + 0x40a -2000
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)>256)
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	MOV A,(2000-9)/0402h
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	MOV _builtin_holtek_delay_2,A
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	MOV A,0
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	CALL __DELAYY5 +5- (((2000-9)%0402h)%6)
 195  0013              	ENDIF
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0013              	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)<=256)
 195  0013              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
文件：main.c       编译器版本 HGASM 0202 页次12

 195  0013  0F01        	MOV A,(2000-9)/0402h
 195  0014              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0014  0080     E  	MOV _builtin_holtek_delay_2,A
 195  0015              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0015  0FF2        	MOV A,((2000-9)%0402h)/4+1
 195  0016              ;# 195 "E:\HT66F018_F12\uart\main.c" 1
 195  0016  2000     E  	CALL __DELAYY3 +3-(((2000-9)%0402h)%4)
 195  0017              	ENDIF
 195  0017              _L28:
 203  0017              #line 203 "E:\HT66F018_F12\uart\main.c"
 203  0017  0FAA        	mov a,170
 203  0018  2000     E  	call _UART_SoftWareSendByte
 204  0019              #line 204 "E:\HT66F018_F12\uart\main.c"
 204  0019  0F00     R  	mov a,low offset _LC0
 204  001A  0080     E  	mov _Send_String_2[0],a
 204  001B  0F00     R  	mov a,high offset _LC0
 204  001C  0080     E  	mov _Send_String_2[1],a
 204  001D  2000     E  	call _Send_String
 205  001E              #line 205 "E:\HT66F018_F12\uart\main.c"
 205  001E              ;# 205 "E:\HT66F018_F12\uart\main.c" 1
 205  001E  0001        	clr wdt
 206  001F              #line 206 "E:\HT66F018_F12\uart\main.c"
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000>263690
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	ERRMESSAGE 'the value 1000of the argument exceeds the maxinum 263690'
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000<0
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	ERRMESSAGE 'the value 1000 of the argument exceeds the mininum 0'
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000==0
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	JMP $
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000==1
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000==2
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF 1000==3
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	NOP
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF (1000<8) AND (1000>3)
文件：main.c       编译器版本 HGASM 0202 页次13

 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	CALL __DELAY3 + 7 -1000
 206  001F              	ENDIF
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F              	IF (1000< 0404h) AND (1000>7)
 206  001F              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  001F  0FF9        	MOV A,1000/4-1
 206  0020              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0020  2000     E  	CALL __DELAYX3 + 3 -(1000 MOD 4)
 206  0021              	ENDIF
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	IF (1000< 0x40B) AND (1000> 0403h)
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV A,0 
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	CALL __DELAYX6 + 0x40a -1000
 206  0021              	ENDIF
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)>256)
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV A,(1000-9)/0402h
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV _builtin_holtek_delay_2,A
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV A,0
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	CALL __DELAYY5 +5- (((1000-9)%0402h)%6)
 206  0021              	ENDIF
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	IF (1000 >= 0x40b) AND ((((1000-9)%0402h)/4+1)<=256)
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV A,(1000-9)/0402h
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV _builtin_holtek_delay_2,A
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	MOV A,((1000-9)%0402h)/4+1
 206  0021              ;# 206 "E:\HT66F018_F12\uart\main.c" 1
 206  0021              	CALL __DELAYY3 +3-(((1000-9)%0402h)%4)
 206  0021              	ENDIF
 207  0021              #line 207 "E:\HT66F018_F12\uart\main.c"
 207  0021              ;# 207 "E:\HT66F018_F12\uart\main.c" 1
 207  0021  0001        	clr wdt
 207  0022  2800     R  	jmp _L28
 207  0023  2800     R  	jmp $
 207  0024              _main endp
 207  0024              
 207  0024              @dummy endp
 207  0024              
 207  0024              #line 207 "E:\HT66F018_F12\uart\main.c"
 207  0024              #pragma debug scope 1 1
 207  0024              public _g_nUART_TX_Data
 207  0000              @HCCINIT	.section 'data'
 175  0000              #line 175 "E:\HT66F018_F12\uart\main.c"
 175  0000              @HCCINIT .section 'data'
 175  0000              _g_nUART_TX_Data label byte
 175  0000              #pragma debug variable 8 1 _g_nUART_TX_Data "g_nUART_TX_Data"
 175  0000              	db 0
 175  0000              @ROMDATA_BASE .section inpage 'code'
 175  0000              	db 0
 175  0001              @HCCINIT .section 'data'
文件：main.c       编译器版本 HGASM 0202 页次14


 200  0001              #line 200 "E:\HT66F018_F12\uart\init.h"
 200  0001              public _bBbSound
 200  0000              @HCCINIT0 .section 'data'
 200  0000              _bBbSound	db 0
 200  0001              #pragma debug variable 7 1 _bBbSound "bBbSound"
 200  0001              
 200  0001              @HCCINIT .section 'data'
 199  0001              #line 199 "E:\HT66F018_F12\uart\init.h"
 199  0001              public _bbCnt
 199  0001              @HCCINIT0 .section 'data'
 199  0001              _bbCnt	db 0
 199  0002              #pragma debug variable 8 1 _bbCnt "bbCnt"
 199  0002              
 199  0001              @HCCINIT .section 'data'
 198  0001              #line 198 "E:\HT66F018_F12\uart\init.h"
 198  0001              public _bbTime
 198  0002              @HCCINIT0 .section 'data'
 198  0002  0002[       _bbTime	db 2 dup(0)
            00
            ]
 198  0004              #pragma debug variable 12 1 _bbTime "bbTime"
 198  0004              
 198  0001              @HCCINIT .section 'data'
 197  0001              #line 197 "E:\HT66F018_F12\uart\init.h"
 197  0001              public _bbRam
 197  0004              @HCCINIT0 .section 'data'
 197  0004              _bbRam	db 0
 197  0005              #pragma debug variable 8 1 _bbRam "bbRam"
 197  0005              
 197  0001              @HCCINIT .section 'data'
 194  0001              #line 194 "E:\HT66F018_F12\uart\init.h"
 194  0001              public _num8
 194  0005              @HCCINIT0 .section 'data'
 194  0005              _num8	db 0
 194  0006              #pragma debug variable 8 1 _num8 "num8"
 194  0006              
 194  0001              @HCCINIT .section 'data'
 193  0001              #line 193 "E:\HT66F018_F12\uart\init.h"
 193  0001              public _num7
 193  0006              @HCCINIT0 .section 'data'
 193  0006              _num7	db 0
 193  0007              #pragma debug variable 8 1 _num7 "num7"
 193  0007              
 193  0001              @HCCINIT .section 'data'
 192  0001              #line 192 "E:\HT66F018_F12\uart\init.h"
 192  0001              public _num6
 192  0007              @HCCINIT0 .section 'data'
 192  0007              _num6	db 0
 192  0008              #pragma debug variable 8 1 _num6 "num6"
 192  0008              
 192  0001              @HCCINIT .section 'data'
 191  0001              #line 191 "E:\HT66F018_F12\uart\init.h"
 191  0001              public _num5
 191  0008              @HCCINIT0 .section 'data'
 191  0008              _num5	db 0
 191  0009              #pragma debug variable 8 1 _num5 "num5"
 191  0009              
 191  0001              @HCCINIT .section 'data'
 190  0001              #line 190 "E:\HT66F018_F12\uart\init.h"
文件：init.h       编译器版本 HGASM 0202 页次15

 190  0001              public _num4
 190  0009              @HCCINIT0 .section 'data'
 190  0009  0002[       _num4	db 2 dup(0)
            00
            ]
 190  000B              #pragma debug variable 12 1 _num4 "num4"
 190  000B              
 190  0001              @HCCINIT .section 'data'
 189  0001              #line 189 "E:\HT66F018_F12\uart\init.h"
 189  0001              public _num3
 189  000B              @HCCINIT0 .section 'data'
 189  000B  0002[       _num3	db 2 dup(0)
            00
            ]
 189  000D              #pragma debug variable 12 1 _num3 "num3"
 189  000D              
 189  0001              @HCCINIT .section 'data'
 188  0001              #line 188 "E:\HT66F018_F12\uart\init.h"
 188  0001              public _num2
 188  000D              @HCCINIT0 .section 'data'
 188  000D              _num2	db 0
 188  000E              #pragma debug variable 8 1 _num2 "num2"
 188  000E              
 188  0001              @HCCINIT .section 'data'
 187  0001              #line 187 "E:\HT66F018_F12\uart\init.h"
 187  0001              public _num1
 187  000E              @HCCINIT0 .section 'data'
 187  000E              _num1	db 0
 187  000F              #pragma debug variable 8 1 _num1 "num1"
 187  000F              
 187  0001              @HCCINIT .section 'data'
 185  0001              #line 185 "E:\HT66F018_F12\uart\init.h"
 185  0001              public _wei
 185  000F              @HCCINIT0 .section 'data'
 185  000F              _wei	db 0
 185  0010              #pragma debug variable 8 1 _wei "wei"
 185  0010              
 185  0001              @HCCINIT .section 'data'
 183  0001              #line 183 "E:\HT66F018_F12\uart\init.h"
 183  0001              public _sum1
 183  0010              @HCCINIT0 .section 'data'
 183  0010  0002[       _sum1	db 2 dup(0)
            00
            ]
 183  0012              #pragma debug variable 12 1 _sum1 "sum1"
 183  0012              
 183  0001              @HCCINIT .section 'data'
 182  0001              #line 182 "E:\HT66F018_F12\uart\init.h"
 182  0001              public _sum
 182  0012              @HCCINIT0 .section 'data'
 182  0012  0002[       _sum	db 2 dup(0)
            00
            ]
 182  0014              #pragma debug variable 12 1 _sum "sum"
 182  0014              
 182  0001              @HCCINIT .section 'data'
 180  0001              #line 180 "E:\HT66F018_F12\uart\init.h"
 180  0001              public _value
 180  0014              @HCCINIT0 .section 'data'
 180  0014              _value	db 0
文件：init.h       编译器版本 HGASM 0202 页次16

 180  0015              #pragma debug variable 7 1 _value "value"
 180  0015              
 180  0001              @HCCINIT .section 'data'
 179  0001              #line 179 "E:\HT66F018_F12\uart\init.h"
 179  0001              public _keystep
 179  0015              @HCCINIT0 .section 'data'
 179  0015              _keystep	db 0
 179  0016              #pragma debug variable 8 1 _keystep "keystep"
 179  0016              
 179  0001              @HCCINIT .section 'data'
 178  0001              #line 178 "E:\HT66F018_F12\uart\init.h"
 178  0001              public _step3
 178  0016              @HCCINIT0 .section 'data'
 178  0016              _step3	db 0
 178  0017              #pragma debug variable 8 1 _step3 "step3"
 178  0017              
 178  0001              @HCCINIT .section 'data'
 177  0001              #line 177 "E:\HT66F018_F12\uart\init.h"
 177  0001              public _step2
 177  0017              @HCCINIT0 .section 'data'
 177  0017              _step2	db 0
 177  0018              #pragma debug variable 8 1 _step2 "step2"
 177  0018              
 177  0001              @HCCINIT .section 'data'
 176  0001              #line 176 "E:\HT66F018_F12\uart\init.h"
 176  0001              public _step1
 176  0018              @HCCINIT0 .section 'data'
 176  0018              _step1	db 0
 176  0019              #pragma debug variable 8 1 _step1 "step1"
 176  0019              
 176  0001              @HCCINIT .section 'data'
 175  0001              #line 175 "E:\HT66F018_F12\uart\init.h"
 175  0001              public _step
 175  0019              @HCCINIT0 .section 'data'
 175  0019              _step	db 0
 175  001A              #pragma debug variable 8 1 _step "step"
 175  001A              
 175  0001              @HCCINIT .section 'data'
 174  0001              #line 174 "E:\HT66F018_F12\uart\init.h"
 174  0001              public _data
 174  001A              @HCCINIT0 .section 'data'
 174  001A              _data	db 0
 174  001B              #pragma debug variable 8 1 _data "data"
 174  001B              
 174  0001              @HCCINIT .section 'data'
 172  0001              #line 172 "E:\HT66F018_F12\uart\init.h"
 172  0001              public _t2s
 172  001B              @HCCINIT0 .section 'data'
 172  001B              _t2s	db 0
 172  001C              #pragma debug variable 8 1 _t2s "t2s"
 172  001C              
 172  0001              @HCCINIT .section 'data'
 171  0001              #line 171 "E:\HT66F018_F12\uart\init.h"
 171  0001              public _t10s
 171  001C              @HCCINIT0 .section 'data'
 171  001C              _t10s	db 0
 171  001D              #pragma debug variable 8 1 _t10s "t10s"
 171  001D              
 171  0001              @HCCINIT .section 'data'
 170  0001              #line 170 "E:\HT66F018_F12\uart\init.h"
文件：init.h       编译器版本 HGASM 0202 页次17

 170  0001              public _tms4
 170  001D              @HCCINIT0 .section 'data'
 170  001D              _tms4	db 0
 170  001E              #pragma debug variable 8 1 _tms4 "tms4"
 170  001E              
 170  0001              @HCCINIT .section 'data'
 169  0001              #line 169 "E:\HT66F018_F12\uart\init.h"
 169  0001              public _tms3
 169  001E              @HCCINIT0 .section 'data'
 169  001E              _tms3	db 0
 169  001F              #pragma debug variable 8 1 _tms3 "tms3"
 169  001F              
 169  0001              @HCCINIT .section 'data'
 168  0001              #line 168 "E:\HT66F018_F12\uart\init.h"
 168  0001              public _tms2
 168  001F              @HCCINIT0 .section 'data'
 168  001F              _tms2	db 0
 168  0020              #pragma debug variable 8 1 _tms2 "tms2"
 168  0020              
 168  0001              @HCCINIT .section 'data'
 167  0001              #line 167 "E:\HT66F018_F12\uart\init.h"
 167  0001              public _tms1
 167  0020              @HCCINIT0 .section 'data'
 167  0020              _tms1	db 0
 167  0021              #pragma debug variable 8 1 _tms1 "tms1"
 167  0021              
 167  0001              @HCCINIT .section 'data'
 166  0001              #line 166 "E:\HT66F018_F12\uart\init.h"
 166  0001              public _tms
 166  0021              @HCCINIT0 .section 'data'
 166  0021  0002[       _tms	db 2 dup(0)
            00
            ]
 166  0023              #pragma debug variable 12 1 _tms "tms"
 166  0023              
 166  0001              @HCCINIT .section 'data'
 163  0001              #line 163 "E:\HT66F018_F12\uart\init.h"
 163  0001              public _bj_second
 163  0023              @HCCINIT0 .section 'data'
 163  0023              _bj_second	db 0
 163  0024              #pragma debug variable 7 1 _bj_second "bj_second"
 163  0024              
 163  0001              @HCCINIT .section 'data'
 162  0001              #line 162 "E:\HT66F018_F12\uart\init.h"
 162  0001              public _bj_min
 162  0024              @HCCINIT0 .section 'data'
 162  0024              _bj_min	db 0
 162  0025              #pragma debug variable 7 1 _bj_min "bj_min"
 162  0025              
 162  0001              @HCCINIT .section 'data'
 160  0001              #line 160 "E:\HT66F018_F12\uart\init.h"
 160  0001              public _peking_min1
 160  0025              @HCCINIT0 .section 'data'
 160  0025              _peking_min1	db 0
 160  0026              #pragma debug variable 7 1 _peking_min1 "peking_min1"
 160  0026              
 160  0001              @HCCINIT .section 'data'
 159  0001              #line 159 "E:\HT66F018_F12\uart\init.h"
 159  0001              public _peking_second1
 159  0026              @HCCINIT0 .section 'data'
文件：init.h       编译器版本 HGASM 0202 页次18

 159  0026              _peking_second1	db 0
 159  0027              #pragma debug variable 7 1 _peking_second1 "peking_second1"
 159  0027              
 159  0001              @HCCINIT .section 'data'
 157  0001              #line 157 "E:\HT66F018_F12\uart\init.h"
 157  0001              public _peking_second
 157  0027              @HCCINIT0 .section 'data'
 157  0027              _peking_second	db 0
 157  0028              #pragma debug variable 7 1 _peking_second "peking_second"
 157  0028              
 157  0001              @HCCINIT .section 'data'
 156  0001              #line 156 "E:\HT66F018_F12\uart\init.h"
 156  0001              public _peking_min
 156  0028              @HCCINIT0 .section 'data'
 156  0028              _peking_min	db 0
 156  0029              #pragma debug variable 7 1 _peking_min "peking_min"
 156  0029              
 156  0001              @HCCINIT .section 'data'
 155  0001              #line 155 "E:\HT66F018_F12\uart\init.h"
 155  0001              public _peking_hour
 155  0029              @HCCINIT0 .section 'data'
 155  0029              _peking_hour	db 0
 155  002A              #pragma debug variable 7 1 _peking_hour "peking_hour"
 155  002A              
 155  0001              @HCCINIT .section 'data'
 153  0001              #line 153 "E:\HT66F018_F12\uart\init.h"
 153  0001              public _alarm_second
 153  002A              @HCCINIT0 .section 'data'
 153  002A              _alarm_second	db 0
 153  002B              #pragma debug variable 7 1 _alarm_second "alarm_second"
 153  002B              
 153  0001              @HCCINIT .section 'data'
 152  0001              #line 152 "E:\HT66F018_F12\uart\init.h"
 152  0001              public _alarm_min
 152  002B              @HCCINIT0 .section 'data'
 152  002B              _alarm_min	db 0
 152  002C              #pragma debug variable 7 1 _alarm_min "alarm_min"
 152  002C              
 152  0001              @HCCINIT .section 'data'
 151  0001              #line 151 "E:\HT66F018_F12\uart\init.h"
 151  0001              public _alarm_hour
 151  002C              @HCCINIT0 .section 'data'
 151  002C              _alarm_hour	db 0
 151  002D              #pragma debug variable 7 1 _alarm_hour "alarm_hour"
 151  002D              
 151  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF7
  63  002D              @HCCINIT0 .section 'data'
  63  002D              _uF7	db 0
  63  002E              #pragma debug struct_end
  63  002E              #pragma debug struct_end
  63  002E              #pragma debug union_end
  63  002E              #pragma debug union_end
  63  002E              #pragma debug variable 43 1 _uF7 "uF7"
  63  002E              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF6
  63  002E              @HCCINIT0 .section 'data'
文件：init.h       编译器版本 HGASM 0202 页次19

  63  002E              _uF6	db 0
  63  002F              #pragma debug variable 43 1 _uF6 "uF6"
  63  002F              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF5
  63  002F              @HCCINIT0 .section 'data'
  63  002F              _uF5	db 0
  63  0030              #pragma debug variable 43 1 _uF5 "uF5"
  63  0030              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF4
  63  0030              @HCCINIT0 .section 'data'
  63  0030              _uF4	db 0
  63  0031              #pragma debug variable 43 1 _uF4 "uF4"
  63  0031              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF3
  63  0031              @HCCINIT0 .section 'data'
  63  0031              _uF3	db 0
  63  0032              #pragma debug variable 43 1 _uF3 "uF3"
  63  0032              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF2
  63  0032              @HCCINIT0 .section 'data'
  63  0032              _uF2	db 0
  63  0033              #pragma debug variable 43 1 _uF2 "uF2"
  63  0033              
  63  0001              @HCCINIT .section 'data'
  63  0001              #line 63 "E:\HT66F018_F12\uart\init.h"
  63  0001              public _uF1
  63  0033              @HCCINIT0 .section 'data'
  63  0033              _uF1	db 0
  63  0034              #pragma debug variable 43 1 _uF1 "uF1"
  63  0034              
  63  0001              @HCCINIT .section 'data'
  63  0001              #pragma debug variable 8 1 ___mp1 "__mp1" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 45 1 ___bp "__bp" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 47 1 ___smod "__smod" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 49 1 ___integ "__integ" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 51 1 ___intc0 "__intc0" 1
文件：init.h       编译器版本 HGASM 0202 页次20

  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 53 1 ___mfi0 "__mfi0" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 55 1 ___pa "__pa" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 57 1 ___pac "__pac" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 59 1 ___papu "__papu" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 61 1 ___tmpc "__tmpc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 63 1 ___wdtc "__wdtc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 65 1 ___acerl "__acerl" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 67 1 ___pb "__pb" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 69 1 ___pbc "__pbc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 71 1 ___pbpu "__pbpu" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 73 1 ___tm0c0 "__tm0c0" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 75 1 ___tm0c1 "__tm0c1" 1
文件：init.h       编译器版本 HGASM 0202 页次21

  63  0001              #pragma debug variable 8 1 ___tm0al "__tm0al" 1
  63  0001              #pragma debug variable 8 1 ___tm0ah "__tm0ah" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 77 1 ___cpc "__cpc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 79 1 ___pc "__pc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 81 1 ___pcc "__pcc" 1
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug struct_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug union_end
  63  0001              #pragma debug variable 83 1 ___pcpu "__pcpu" 1
  63  0001              #pragma debug variable 8 1 ___iar1 "__iar1" 1
  63  0001              extern r1:byte
  63  0001              extern r2:byte

 186  0001              #line 186 "E:\HT66F018_F12\uart\main.c"
 186  0000              @code .section at 0 'code'
 186  0000  2800     R  	jmp _main_startup1
 186  0001              
 186  0001              extern _UART_SoftWareSendByte:near
 186  0001              extern _Send_String_2:byte
 186  0001              extern _Send_String:near
 186  0001              
 186  0001              ; 
 186  0001              ; Generated by holtek-gcc v3.19, Fri Jan 21 10:16:58 2022
 186  0001              ; Rebuild 718
 186  0001              ; end of file


        0 Errors, 0